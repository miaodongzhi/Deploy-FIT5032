name: Deploy Vue.js project to GitHub Pages

on:
  push:
    branches: ["main"]  # Triggers deployment when code is pushed to the main branch
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: read  # Provides read access to the repository contents
  pages: write  # Provides write access to GitHub Pages
  id-token: write  # Allows generating an ID token for pages

concurrency:
  group: "pages"  # Ensures that only one deployment runs at a time
  cancel-in-progress: false  # Does not cancel an in-progress deployment

jobs:
  build:
    runs-on: ubuntu-latest  # Specifies the OS environment to use
    steps:
      - name: Checkout the repository  # Step to clone the repository
        uses: actions/checkout@v4

      - name: Setup Node.js  # Setup Node.js to run npm commands
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify Node.js version compatible with Vue.js

      - name: Install dependencies and build  # Install Vue.js project dependencies and build the project
        run: |
          cd NoMash-Library-main  # Navigate to the Vue.js project directory
          npm install  # Install all npm dependencies
          npm run build  # Build the project for production

      - name: Setup Pages  # Configure the GitHub Pages environment
        uses: actions/configure-pages@v5

      - name: Upload artifact  # Upload the build output (dist folder) as a GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'NoMash-Library-main/dist'  # Specify the build output directory

  deploy:
    environment:
      name: github-pages  # Deployment environment set to GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}  # URL of the deployed page
    runs-on: ubuntu-latest
    needs: build  # Waits for the build job to complete before deploying
    steps:
      - name: Deploy to GitHub Pages  # Deploys the project to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
